'''アルゴリズムと工夫点(Convenience Store 2/CPU: 297 ms Memory: 87556 KB  Length: 217 B)
時刻が小数だと扱いずらいため，時刻t+0.5秒に存在するか否かは，時刻tに存在するか判定する問題と捉え直す．
つまり，時刻[L,R)の半開区間だけ存在すると考えればよい．
最悪計算量は O(T+N)≒10^6 となり十分高速．

※区間和アルゴリズムに関する補足-------
参考書で扱った
・累積和
・imos法
は比較的単純でありながらも，頻出なアルゴリズムなのでマスターしておこう．
また区間和に関するアルゴリズムとしては，
・尺取り法
・Binary Indexed Tree (通称BITと呼ばれる，区間和に特化したセグ木の亜種みたいなやつ)
が有名であるため，興味がある人はこの機会に学んでみてください．
-----------------------
'''
t=int(input())
n=int(input())
cnt=[0]*(t+1)

while n>0:
    l,r=map(int,input().split())
    cnt[l]+=1
    cnt[r]-=1
    n-=1

for i in range(0,t-1):
    cnt[i+1]+=cnt[i]
    print(cnt[i])
print(cnt[t-1])